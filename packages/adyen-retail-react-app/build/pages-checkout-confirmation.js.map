{"version":3,"file":"pages-checkout-confirmation.js","mappings":"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","sources":["webpack://adyen-retail-react-app/./node_modules/@salesforce/retail-react-app/app/pages/checkout/confirmation.jsx"],"sourcesContent":["/*\n * Copyright (c) 2021, salesforce.com, inc.\n * All rights reserved.\n * SPDX-License-Identifier: BSD-3-Clause\n * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause\n */\nimport React, {Fragment, useEffect} from 'react'\nimport {FormattedMessage, FormattedNumber} from 'react-intl'\nimport {\n    Box,\n    Button,\n    Container,\n    Flex,\n    Heading,\n    SimpleGrid,\n    Spacer,\n    Stack,\n    Text,\n    Alert,\n    AlertIcon,\n    Divider\n} from '@salesforce/retail-react-app/app/components/shared/ui'\nimport {useForm} from 'react-hook-form'\nimport {useParams} from 'react-router-dom'\nimport {useOrder, useProducts, useAuthHelper, AuthHelpers} from '@salesforce/commerce-sdk-react'\nimport {getCreditCardIcon} from '@salesforce/retail-react-app/app/utils/cc-utils'\nimport useNavigation from '@salesforce/retail-react-app/app/hooks/use-navigation'\nimport Link from '@salesforce/retail-react-app/app/components/link'\nimport AddressDisplay from '@salesforce/retail-react-app/app/components/address-display'\nimport PostCheckoutRegistrationFields from '@salesforce/retail-react-app/app/components/forms/post-checkout-registration-fields'\nimport PromoPopover from '@salesforce/retail-react-app/app/components/promo-popover'\nimport ItemVariantProvider from '@salesforce/retail-react-app/app/components/item-variant'\nimport CartItemVariantImage from '@salesforce/retail-react-app/app/components/item-variant/item-image'\nimport CartItemVariantName from '@salesforce/retail-react-app/app/components/item-variant/item-name'\nimport CartItemVariantAttributes from '@salesforce/retail-react-app/app/components/item-variant/item-attributes'\nimport CartItemVariantPrice from '@salesforce/retail-react-app/app/components/item-variant/item-price'\nimport {useCurrentCustomer} from '@salesforce/retail-react-app/app/hooks/use-current-customer'\nimport {API_ERROR_MESSAGE} from '@salesforce/retail-react-app/app/constants'\n\nconst onClient = typeof window !== 'undefined'\n\nconst CheckoutConfirmation = () => {\n    const {orderNo} = useParams()\n    const navigate = useNavigation()\n    const {data: customer} = useCurrentCustomer()\n    const register = useAuthHelper(AuthHelpers.Register)\n    const {data: order} = useOrder(\n        {\n            parameters: {orderNo}\n        },\n        {\n            enabled: !!orderNo && onClient\n        }\n    )\n    const itemIds = order?.productItems.map((item) => item.productId)\n    const {data: products} = useProducts({parameters: {ids: itemIds?.join(',')}})\n    const productItemsMap = products?.data.reduce((map, item) => ({...map, [item.id]: item}), {})\n    const form = useForm()\n\n    useEffect(() => {\n        form.reset({\n            email: order?.customerInfo?.email || '',\n            password: '',\n            firstName: order?.billingAddress?.firstName,\n            lastName: order?.billingAddress?.lastName\n        })\n    }, [order])\n\n    if (!order || !order.orderNo) {\n        return null\n    }\n\n    const CardIcon = getCreditCardIcon(order.paymentInstruments[0].paymentCard?.cardType)\n\n    const submitForm = async (data) => {\n        try {\n            const body = {\n                customer: {\n                    firstName: data.firstName,\n                    lastName: data.lastName,\n                    email: data.email,\n                    login: data.email\n                },\n                password: data.password\n            }\n            await register.mutateAsync(body)\n\n            navigate(`/account`)\n        } catch (error) {\n            if (!error.response) {\n                form.setError('global', {type: 'manual', message: API_ERROR_MESSAGE})\n                return\n            }\n            const json = await error.response.json()\n\n            const existingAccountMessage = (\n                <Fragment>\n                    <FormattedMessage\n                        defaultMessage=\"This email already has an account.\"\n                        id=\"checkout_confirmation.message.already_has_account\"\n                    />\n                    &nbsp;\n                    <Link to=\"/login\" color=\"blue.600\">\n                        <FormattedMessage\n                            defaultMessage=\"Log in here\"\n                            id=\"checkout_confirmation.link.login\"\n                        />\n                    </Link>\n                </Fragment>\n            )\n\n            const message = /the login is already in use/i.test(json.detail)\n                ? existingAccountMessage\n                : API_ERROR_MESSAGE\n\n            form.setError('global', {type: 'manual', message})\n        }\n    }\n\n    return (\n        <Box background=\"gray.50\">\n            <Container\n                maxWidth=\"container.md\"\n                py={{base: 7, md: 16}}\n                px={{base: 0, md: 4}}\n                data-testid=\"sf-checkout-confirmation-container\"\n            >\n                <Stack spacing={4}>\n                    <Box layerStyle=\"card\" rounded={[0, 0, 'base']} px={[4, 4, 6]} py={[6, 6, 8]}>\n                        <Stack spacing={6}>\n                            <Heading align=\"center\" fontSize={['2xl']}>\n                                <FormattedMessage\n                                    defaultMessage=\"Thank you for your order!\"\n                                    id=\"checkout_confirmation.heading.thank_you_for_order\"\n                                />\n                            </Heading>\n\n                            <Box>\n                                <Container variant=\"form\">\n                                    <Stack spacing={3}>\n                                        <Text align=\"center\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Order Number\"\n                                                id=\"checkout_confirmation.label.order_number\"\n                                            />\n                                            :{' '}\n                                            <Text as=\"span\" fontWeight=\"bold\">\n                                                {order.orderNo}\n                                            </Text>\n                                        </Text>\n                                        <Text align=\"center\">\n                                            <FormattedMessage\n                                                defaultMessage=\"We will send an email to <b>{email}</b> with your confirmation number and receipt shortly.\"\n                                                id=\"checkout_confirmation.message.will_email_shortly\"\n                                                values={{\n                                                    b: (chunks) => <b>{chunks}</b>,\n                                                    email: order.customerInfo.email\n                                                }}\n                                            />\n                                        </Text>\n\n                                        <Spacer />\n\n                                        <Button as={Link} href=\"/\" variant=\"outline\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Continue Shopping\"\n                                                id=\"checkout_confirmation.link.continue_shopping\"\n                                            />\n                                        </Button>\n                                    </Stack>\n                                </Container>\n                            </Box>\n                        </Stack>\n                    </Box>\n\n                    {customer.isGuest && (\n                        <Box\n                            layerStyle=\"card\"\n                            rounded={[0, 0, 'base']}\n                            px={[4, 4, 6]}\n                            py={[6, 6, 8]}\n                        >\n                            <Container variant=\"form\">\n                                <Heading fontSize=\"lg\" marginBottom={6}>\n                                    <FormattedMessage\n                                        defaultMessage=\"Create an account for faster checkout\"\n                                        id=\"checkout_confirmation.heading.create_account\"\n                                    />\n                                </Heading>\n\n                                <form onSubmit={form.handleSubmit(submitForm)}>\n                                    <Stack spacing={4}>\n                                        {form.formState.errors?.global && (\n                                            <Alert status=\"error\">\n                                                <AlertIcon />\n                                                {form.formState.errors.global.message}\n                                            </Alert>\n                                        )}\n\n                                        <PostCheckoutRegistrationFields form={form} />\n\n                                        <Button\n                                            type=\"submit\"\n                                            width=\"full\"\n                                            onClick={() => form.clearErrors('global')}\n                                            isLoading={form.formState.isSubmitting}\n                                        >\n                                            <FormattedMessage\n                                                defaultMessage=\"Create Account\"\n                                                id=\"checkout_confirmation.button.create_account\"\n                                            />\n                                        </Button>\n                                    </Stack>\n                                </form>\n                            </Container>\n                        </Box>\n                    )}\n\n                    <Box layerStyle=\"card\" rounded={[0, 0, 'base']} px={[4, 4, 6]} py={[6, 6, 8]}>\n                        <Container variant=\"form\">\n                            <Stack spacing={6}>\n                                <Heading fontSize=\"lg\">\n                                    <FormattedMessage\n                                        defaultMessage=\"Delivery Details\"\n                                        id=\"checkout_confirmation.heading.delivery_details\"\n                                    />\n                                </Heading>\n\n                                <SimpleGrid columns={[1, 1, 2]} spacing={6}>\n                                    <Stack spacing={1}>\n                                        <Heading as=\"h3\" fontSize=\"sm\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Shipping Address\"\n                                                id=\"checkout_confirmation.heading.shipping_address\"\n                                            />\n                                        </Heading>\n                                        <AddressDisplay\n                                            address={order.shipments[0].shippingAddress}\n                                        />\n                                    </Stack>\n\n                                    <Stack spacing={1}>\n                                        <Heading as=\"h3\" fontSize=\"sm\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Shipping Method\"\n                                                id=\"checkout_confirmation.heading.shipping_method\"\n                                            />\n                                        </Heading>\n                                        <Box>\n                                            <Text>{order.shipments[0].shippingMethod.name}</Text>\n                                            <Text>\n                                                {order.shipments[0].shippingMethod.description}\n                                            </Text>\n                                        </Box>\n                                    </Stack>\n                                </SimpleGrid>\n                            </Stack>\n                        </Container>\n                    </Box>\n\n                    <Box layerStyle=\"card\" rounded={[0, 0, 'base']} px={[4, 4, 6]} py={[6, 6, 8]}>\n                        <Container variant=\"form\">\n                            <Stack spacing={6}>\n                                <Heading fontSize=\"lg\">\n                                    <FormattedMessage\n                                        defaultMessage=\"Order Summary\"\n                                        id=\"checkout_confirmation.heading.order_summary\"\n                                    />\n                                </Heading>\n\n                                <Stack spacing={4}>\n                                    <Text>\n                                        <FormattedMessage\n                                            description=\"# item(s) in order\"\n                                            defaultMessage=\"{itemCount, plural, =0 {0 items} one {# item} other {# items}}\"\n                                            values={{\n                                                itemCount: order.productItems.reduce(\n                                                    (a, b) => a + b.quantity,\n                                                    0\n                                                )\n                                            }}\n                                            id=\"checkout_confirmation.message.num_of_items_in_order\"\n                                        />\n                                    </Text>\n\n                                    <Stack spacing={5} align=\"flex-start\">\n                                        <Stack\n                                            spacing={5}\n                                            align=\"flex-start\"\n                                            width=\"full\"\n                                            divider={<Divider />}\n                                        >\n                                            {order.productItems?.map((product, idx) => {\n                                                const productDetail =\n                                                    productItemsMap?.[product.productId] || {}\n                                                const variant = {\n                                                    ...product,\n                                                    ...productDetail,\n                                                    price: product.price\n                                                }\n\n                                                return (\n                                                    <ItemVariantProvider\n                                                        key={product.productId}\n                                                        index={idx}\n                                                        variant={variant}\n                                                    >\n                                                        <Flex width=\"full\" alignItems=\"flex-start\">\n                                                            <CartItemVariantImage\n                                                                width=\"80px\"\n                                                                mr={2}\n                                                            />\n                                                            <Stack\n                                                                spacing={1}\n                                                                marginTop=\"-3px\"\n                                                                flex={1}\n                                                            >\n                                                                <CartItemVariantName />\n                                                                <Flex\n                                                                    width=\"full\"\n                                                                    justifyContent=\"space-between\"\n                                                                    alignItems=\"flex-end\"\n                                                                >\n                                                                    <CartItemVariantAttributes\n                                                                        includeQuantity\n                                                                    />\n                                                                    <CartItemVariantPrice />\n                                                                </Flex>\n                                                            </Stack>\n                                                        </Flex>\n                                                    </ItemVariantProvider>\n                                                )\n                                            })}\n                                        </Stack>\n\n                                        <Stack w=\"full\" py={4} borderY=\"1px\" borderColor=\"gray.200\">\n                                            <Flex justify=\"space-between\">\n                                                <Text fontWeight=\"bold\">\n                                                    <FormattedMessage\n                                                        defaultMessage=\"Subtotal\"\n                                                        id=\"checkout_confirmation.label.subtotal\"\n                                                    />\n                                                </Text>\n                                                <Text fontWeight=\"bold\">\n                                                    <FormattedNumber\n                                                        style=\"currency\"\n                                                        currency={order?.currency}\n                                                        value={order?.productSubTotal}\n                                                    />\n                                                </Text>\n                                            </Flex>\n                                            {order.orderPriceAdjustments?.map((adjustment) => (\n                                                <Flex\n                                                    justify=\"space-between\"\n                                                    key={adjustment.priceAdjustmentId}\n                                                >\n                                                    <Text>{adjustment.itemText}</Text>\n                                                    <Text color=\"green.500\">\n                                                        <FormattedNumber\n                                                            style=\"currency\"\n                                                            currency={order?.currency}\n                                                            value={adjustment.price}\n                                                        />\n                                                    </Text>\n                                                </Flex>\n                                            ))}\n                                            <Flex justify=\"space-between\">\n                                                <Flex alignItems=\"center\">\n                                                    <Text lineHeight={1}>\n                                                        <FormattedMessage\n                                                            defaultMessage=\"Shipping\"\n                                                            id=\"checkout_confirmation.label.shipping\"\n                                                        />\n                                                        {order.shippingItems[0].priceAdjustments\n                                                            ?.length > 0 && (\n                                                            <Text as=\"span\" ml={1}>\n                                                                (\n                                                                <FormattedMessage\n                                                                    defaultMessage=\"Promotion applied\"\n                                                                    id=\"checkout_confirmation.label.promo_applied\"\n                                                                />\n                                                                )\n                                                            </Text>\n                                                        )}\n                                                    </Text>\n                                                    {order.shippingItems?.[0]?.priceAdjustments\n                                                        ?.length > 0 && (\n                                                        <PromoPopover ml={2}>\n                                                            <Stack>\n                                                                {order.shippingItems[0].priceAdjustments?.map(\n                                                                    (adjustment) => (\n                                                                        <Text\n                                                                            key={\n                                                                                adjustment.priceAdjustmentId\n                                                                            }\n                                                                            fontSize=\"sm\"\n                                                                        >\n                                                                            {adjustment.itemText}\n                                                                        </Text>\n                                                                    )\n                                                                )}\n                                                            </Stack>\n                                                        </PromoPopover>\n                                                    )}\n                                                </Flex>\n\n                                                {order.shippingItems[0].priceAdjustments?.some(\n                                                    ({appliedDiscount}) =>\n                                                        appliedDiscount?.type === 'free'\n                                                ) ? (\n                                                    <Text\n                                                        as=\"span\"\n                                                        color=\"green.500\"\n                                                        textTransform=\"uppercase\"\n                                                    >\n                                                        <FormattedMessage\n                                                            defaultMessage=\"Free\"\n                                                            id=\"checkout_confirmation.label.free\"\n                                                        />\n                                                    </Text>\n                                                ) : (\n                                                    <Text>\n                                                        <FormattedNumber\n                                                            value={order.shippingTotal}\n                                                            style=\"currency\"\n                                                            currency={order.currency}\n                                                        />\n                                                    </Text>\n                                                )}\n                                            </Flex>\n                                            <Flex justify=\"space-between\">\n                                                <Text>\n                                                    <FormattedMessage\n                                                        defaultMessage=\"Tax\"\n                                                        id=\"checkout_confirmation.label.tax\"\n                                                    />\n                                                </Text>\n                                                <Text>\n                                                    <FormattedNumber\n                                                        value={order.taxTotal}\n                                                        style=\"currency\"\n                                                        currency={order.currency}\n                                                    />\n                                                </Text>\n                                            </Flex>\n                                        </Stack>\n\n                                        <Flex w=\"full\" justify=\"space-between\">\n                                            <Text fontWeight=\"bold\">\n                                                <FormattedMessage\n                                                    defaultMessage=\"Order Total\"\n                                                    id=\"checkout_confirmation.label.order_total\"\n                                                />\n                                            </Text>\n                                            <Text fontWeight=\"bold\">\n                                                <FormattedNumber\n                                                    style=\"currency\"\n                                                    currency={order?.currency}\n                                                    value={order?.orderTotal}\n                                                />\n                                            </Text>\n                                        </Flex>\n                                    </Stack>\n                                </Stack>\n                            </Stack>\n                        </Container>\n                    </Box>\n\n                    <Box layerStyle=\"card\" rounded={[0, 0, 'base']} px={[4, 4, 6]} py={[6, 6, 8]}>\n                        <Container variant=\"form\">\n                            <Stack spacing={6}>\n                                <Heading fontSize=\"lg\">\n                                    <FormattedMessage\n                                        defaultMessage=\"Payment Details\"\n                                        id=\"checkout_confirmation.heading.payment_details\"\n                                    />\n                                </Heading>\n\n                                <SimpleGrid columns={[1, 1, 2]} spacing={6}>\n                                    <Stack spacing={1}>\n                                        <Heading as=\"h3\" fontSize=\"sm\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Billing Address\"\n                                                id=\"checkout_confirmation.heading.billing_address\"\n                                            />\n                                        </Heading>\n                                        <AddressDisplay address={order.billingAddress} />\n                                    </Stack>\n\n                                    <Stack spacing={1}>\n                                        <Heading as=\"h3\" fontSize=\"sm\">\n                                            <FormattedMessage\n                                                defaultMessage=\"Credit Card\"\n                                                id=\"checkout_confirmation.heading.credit_card\"\n                                            />\n                                        </Heading>\n\n                                        <Stack direction=\"row\">\n                                            {CardIcon && <CardIcon layerStyle=\"ccIcon\" />}\n\n                                            <Box>\n                                                <Text>\n                                                    {\n                                                        order.paymentInstruments[0].paymentCard\n                                                            ?.cardType\n                                                    }\n                                                </Text>\n                                                <Stack direction=\"row\">\n                                                    <Text>\n                                                        &bull;&bull;&bull;&bull;{' '}\n                                                        {\n                                                            order.paymentInstruments[0].paymentCard\n                                                                ?.numberLastDigits\n                                                        }\n                                                    </Text>\n                                                    <Text>\n                                                        {\n                                                            order.paymentInstruments[0].paymentCard\n                                                                ?.expirationMonth\n                                                        }\n                                                        /\n                                                        {\n                                                            order.paymentInstruments[0].paymentCard\n                                                                ?.expirationYear\n                                                        }\n                                                    </Text>\n                                                </Stack>\n                                            </Box>\n                                        </Stack>\n                                    </Stack>\n                                </SimpleGrid>\n                            </Stack>\n                        </Container>\n                    </Box>\n                </Stack>\n            </Container>\n        </Box>\n    )\n}\n\nexport default CheckoutConfirmation\n"],"names":["onClient","window","CheckoutConfirmation","_order$paymentInstrum","_form$formState$error","_order$productItems","_order$orderPriceAdju","_order$shippingItems$","_order$shippingItems","_order$shippingItems$2","_order$shippingItems$3","_order$shippingItems$4","_order$shippingItems$5","_order$paymentInstrum2","_order$paymentInstrum3","_order$paymentInstrum4","_order$paymentInstrum5","orderNo","useParams","navigate","useNavigation","data","customer","useCurrentCustomer","register","useAuthHelper","AuthHelpers","Register","order","useOrder","parameters","enabled","itemIds","productItems","map","item","productId","products","useProducts","ids","join","productItemsMap","reduce","_objectSpread","id","form","useForm","useEffect","_order$customerInfo","_order$billingAddress","_order$billingAddress2","reset","email","customerInfo","password","firstName","billingAddress","lastName","CardIcon","getCreditCardIcon","paymentInstruments","paymentCard","cardType","submitForm","_ref","_asyncToGenerator","body","login","mutateAsync","error","response","setError","type","message","API_ERROR_MESSAGE","json","existingAccountMessage","React","Fragment","FormattedMessage","defaultMessage","Link","to","color","test","detail","_x","apply","arguments","Box","background","Container","maxWidth","py","base","md","px","Stack","spacing","layerStyle","rounded","Heading","align","fontSize","variant","Text","as","fontWeight","values","b","chunks","Spacer","Button","href","isGuest","marginBottom","onSubmit","handleSubmit","formState","errors","global","Alert","status","AlertIcon","PostCheckoutRegistrationFields","width","onClick","clearErrors","isLoading","isSubmitting","SimpleGrid","columns","AddressDisplay","address","shipments","shippingAddress","shippingMethod","name","description","itemCount","a","quantity","divider","Divider","product","idx","productDetail","price","ItemVariantProvider","key","index","Flex","alignItems","CartItemVariantImage","mr","marginTop","flex","CartItemVariantName","justifyContent","CartItemVariantAttributes","includeQuantity","CartItemVariantPrice","w","borderY","borderColor","justify","FormattedNumber","style","currency","value","productSubTotal","orderPriceAdjustments","adjustment","priceAdjustmentId","itemText","lineHeight","shippingItems","priceAdjustments","length","ml","PromoPopover","some","appliedDiscount","textTransform","shippingTotal","taxTotal","orderTotal","direction","numberLastDigits","expirationMonth","expirationYear"],"sourceRoot":""}